@model FileRepository.Models.Storage

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Storage</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SType)
                @Html.ValidationMessageFor(model => model.SType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientLocation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientLocation)
                @Html.ValidationMessageFor(model => model.ClientLocation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerLocation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServerLocation)
                @Html.ValidationMessageFor(model => model.ServerLocation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContainsFile, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContainsFile)
                @Html.ValidationMessageFor(model => model.ContainsFile)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContainsFolder, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContainsFolder)
                @Html.ValidationMessageFor(model => model.ContainsFolder)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size)
                @Html.ValidationMessageFor(model => model.Size)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedOn)
                @Html.ValidationMessageFor(model => model.CreatedOn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedOn)
                @Html.ValidationMessageFor(model => model.UpdatedOn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy)
                @Html.ValidationMessageFor(model => model.CreatedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedBy)
                @Html.ValidationMessageFor(model => model.UpdatedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReadAccess, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReadAccess)
                @Html.ValidationMessageFor(model => model.ReadAccess)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WriteAccess, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WriteAccess)
                @Html.ValidationMessageFor(model => model.WriteAccess)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsHidden, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsHidden)
                @Html.ValidationMessageFor(model => model.IsHidden)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSharing, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsSharing)
                @Html.ValidationMessageFor(model => model.IsSharing)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
